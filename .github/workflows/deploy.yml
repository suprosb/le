name: Deploy to Heroku

on:
  workflow_dispatch:
    inputs:
      HEROKU_APP_NAME:
        description: "bdmes"
        required: true
      HEROKU_API_KEY:
        description: "HRKU-32e53c3a-07e8-40fa-b8b5-0c7685195005"
        required: true
      HEROKU_EMAIL:
        description: "suproboiragi1@gmail.com"
        required: true
      HEROKU_TEAM_NAME:
        description: "tested-team"
        required: false
      BOT_TOKEN:
        description: "7678495580:AAHuDKJNl6nIhkKurp4TnLlk6aZG7QmFoAw"
        required: true
      OWNER_ID:
        description: "5659668981"
        required: true
      DATABASE_URL:
        description: "mongodb+srv://suproboiragi2:t4GwmmrWCkUcX3Ui@cluster0.nn4hh.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
        required: true
      TELEGRAM_API:
        description: "22920744"
        required: true
      TELEGRAM_HASH:
        description: "31cb93c017f265e4fa6d0ba91236b826"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout deploy branch
        uses: actions/checkout@v2

      - name: Delete unnecessary directories and files
        run: |
          # Directories to delete
          for dir in bot qBittorrent web; do
            if [ -d "./$dir" ]; then
              echo "Deleting directory: $dir"
              rm -rf ./$dir
            else
              echo "Directory not found: $dir"
            fi
          done

          # Delete a2c.conf if it exists
          if [ -f "./a2c.conf" ]; then
            echo "Deleting file: a2c.conf"
            rm -f ./a2c.conf
          else
            echo "File not found: a2c.conf"
          fi

      - name: Deploy to Heroku
        uses: 5hojib/heroku-deploy-action@v2
        with:
          heroku_api_key: ${{inputs.HEROKU_API_KEY}}
          heroku_app_name: ${{inputs.HEROKU_APP_NAME}}
          heroku_email: ${{inputs.HEROKU_EMAIL}}
          team: ${{ inputs.HEROKU_TEAM_NAME != '' && format('{0}', inputs.HEROKU_TEAM_NAME) || '' }}
          usedocker: true
          docker_heroku_process_type: web
          stack: "container"
          region: "eu"
        env:
          HD_OWNER_ID: ${{inputs.OWNER_ID}}
          HD_TELEGRAM_API: ${{inputs.TELEGRAM_API}}
          HD_TELEGRAM_HASH: ${{inputs.TELEGRAM_HASH}}
          HD_DATABASE_URL: ${{inputs.DATABASE_URL}}
          HD_BOT_TOKEN: ${{inputs.BOT_TOKEN}}
